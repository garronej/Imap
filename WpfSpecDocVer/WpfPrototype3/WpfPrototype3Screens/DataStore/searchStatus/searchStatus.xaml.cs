//      *********    DO NOT MODIFY THIS FILE     *********
//      This file is regenerated by a design tool. Making
//      changes to this file can cause errors.
namespace Expression.Blend.DataStore.searchStatus
{
	using System;
	using System.Collections.Generic;

	public class searchStatusGlobalStorage
	{
		public static searchStatusGlobalStorage Singleton;
		public bool Loading {get;set;}
		private List<WeakReference> registrar; 

		public searchStatusGlobalStorage()
		{
			this.registrar = new List<WeakReference>();
		}
		
		static searchStatusGlobalStorage()
		{
			Singleton = new searchStatusGlobalStorage();
		}

		public void Register(searchStatus dataStore)
		{
			this.registrar.Add(new WeakReference(dataStore));
		}

		public void OnPropertyChanged(string property)
		{
			foreach (WeakReference entry in this.registrar)
			{
				if (!entry.IsAlive)
				{
					continue;
				}
				searchStatus dataStore = (searchStatus)entry.Target;
				dataStore.FirePropertyChanged(property);
			}
		}
		
		public bool AssignementAllowed
		{
			get
			{
				// Only assign from loading once
				if(this.Loading && this.registrar.Count > 0)
				{
					return false;
				}
				
				return true;
			}
		}

		private double _idPlace = 0;

		public double idPlace
		{
			get
			{
				return this._idPlace;
			}

			set
			{
				if(!this.AssignementAllowed)
				{
					return;
				}
				
				if (this._idPlace != value)
				{
					this._idPlace = value;
					this.OnPropertyChanged("idPlace");
				}
			}
		}

		private double _index = 0;

		public double index
		{
			get
			{
				return this._index;
			}

			set
			{
				if(!this.AssignementAllowed)
				{
					return;
				}
				
				if (this._index != value)
				{
					this._index = value;
					this.OnPropertyChanged("index");
				}
			}
		}

		private bool _isShool = false;

		public bool isShool
		{
			get
			{
				return this._isShool;
			}

			set
			{
				if(!this.AssignementAllowed)
				{
					return;
				}
				
				if (this._isShool != value)
				{
					this._isShool = value;
					this.OnPropertyChanged("isShool");
				}
			}
		}
	}

	public class searchStatus : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public void FirePropertyChanged(string propertyName)
		{
			this.OnPropertyChanged(propertyName);
		}

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		public searchStatus()
		{
			try
			{
				System.Uri resourceUri = new System.Uri("/WpfPrototype3.Screens;component/DataStore/searchStatus/searchStatus.xaml", System.UriKind.Relative);
				if (System.Windows.Application.GetResourceStream(resourceUri) != null)
				{
					searchStatusGlobalStorage.Singleton.Loading = true;
					System.Windows.Application.LoadComponent(this, resourceUri);
					searchStatusGlobalStorage.Singleton.Loading = false;
					searchStatusGlobalStorage.Singleton.Register(this);
				}
			}
			catch (System.Exception)
			{
			}
		}

		private double _idPlace = 0;

		public double idPlace
		{
			get
			{
				return searchStatusGlobalStorage.Singleton.idPlace;
			}

			set
			{
				searchStatusGlobalStorage.Singleton.idPlace = value;
			}
		}

		private double _index = 0;

		public double index
		{
			get
			{
				return searchStatusGlobalStorage.Singleton.index;
			}

			set
			{
				searchStatusGlobalStorage.Singleton.index = value;
			}
		}

		private bool _isShool = false;

		public bool isShool
		{
			get
			{
				return searchStatusGlobalStorage.Singleton.isShool;
			}

			set
			{
				searchStatusGlobalStorage.Singleton.isShool = value;
			}
		}
	}
}
